{"version":3,"sources":["findColor.js","sortDiv.js","sortDivHome.js","App.js","serviceWorker.js","index.js"],"names":["FindColor","useState","fieldOne","setFieldOne","fieldTwo","setFieldTwo","fieldThree","setFieldThree","fieldFour","setFieldFour","clickOne","e","preventDefault","h","r","g","b","length","hexToRGB","name","fakeDiv","document","createElement","style","color","body","appendChild","pv","window","getComputedStyle","getPropertyValue","removeChild","rgb","substr","split","toString","nameToHex","MyForm","Label","type","value","onChange","target","onKeyPress","onClick","styled","div","label","SortDiv","wrapstyle","style1","style2","style3","style4","Wrapper","Div1","Div2","Div3","Div4","SortDivHome","wrapper","setWrapper","div1","setDiv1","div2","setDiv2","div3","setDiv3","div4","setDiv4","MyForm2","Head","Rap","Header","T1","T2","T3","T4","T5","Rap2","Header2","MyFormGrid","display","flexDirection","fontWeight","gridRow","gridColumn","marginRight","border","padding","paddingLeft","justifySelf","Textarea","spellCheck","All","RapStyle","textarea","Home","initialSet","setInitialSet","setColor","layout","setLayout","hideme","setHideme","start","Choices","One","Two","Boxes","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7f79e5bd.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport styled from 'styled-components';\r\n\r\nexport default function FindColor({\r\n\r\n}) {\r\n\r\n  const [fieldOne, setFieldOne] = useState();\r\n  const [fieldTwo, setFieldTwo] = useState();\r\n  const [fieldThree, setFieldThree] = useState();\r\n  const [fieldFour, setFieldFour] = useState();\r\n\r\n  function clickOne(e) {\r\n    e.preventDefault();\r\n    setFieldThree(hexToRGB(\"#\" + fieldOne));\r\n    setFieldFour(nameToHex(fieldTwo));\r\n  }\r\n\r\n\r\n  function hexToRGB(h) {\r\n    let r = 0, g = 0, b = 0;\r\n\r\n    // 3 digits\r\n    if (h.length == 4) {\r\n      r = \"0x\" + h[1] + h[1];\r\n      g = \"0x\" + h[2] + h[2];\r\n      b = \"0x\" + h[3] + h[3];\r\n\r\n      // 6 digits\r\n    } else if (h.length == 7) {\r\n      r = \"0x\" + h[1] + h[2];\r\n      g = \"0x\" + h[3] + h[4];\r\n      b = \"0x\" + h[5] + h[6];\r\n    }\r\n\r\n    return \"rgb(\" + +r + \",\" + +g + \",\" + +b + \")\";\r\n  }\r\n\r\n  function nameToHex(name) {\r\n    // Get RGB from named color in temporary div\r\n    let fakeDiv = document.createElement(\"div\");\r\n    fakeDiv.style.color = name;\r\n    document.body.appendChild(fakeDiv);\r\n\r\n    let cs = window.getComputedStyle(fakeDiv),\r\n      pv = cs.getPropertyValue(\"color\");\r\n\r\n    document.body.removeChild(fakeDiv);\r\n\r\n    // Code ripped from RGBToHex() (except pv is substringed)\r\n    let rgb = pv.substr(4).split(\")\")[0].split(\",\"),\r\n      r = (+rgb[0]).toString(16),\r\n      g = (+rgb[1]).toString(16),\r\n      b = (+rgb[2]).toString(16);\r\n\r\n    if (r.length == 1)\r\n      r = \"0\" + r;\r\n    if (g.length == 1)\r\n      g = \"0\" + g;\r\n    if (b.length == 1)\r\n      b = \"0\" + b;\r\n\r\n    return \"#\" + r + g + b;\r\n  }\r\n\r\n\r\n  return (<>\r\n    <div>OUTPUT: {fieldThree}, {fieldFour}</div>\r\n    {/* <label>Set font color\r\n     <input type=\"text\" value={fieldOne} name={\"first\"} onChange={e => setFieldOne(e.target.value)} />\r\n    </label> */}\r\n    <MyForm>\r\n      <Label>#\r\n      <input type=\"text\" value={fieldOne} name={\"first\"} onChange={e => setFieldOne(e.target.value)} />\r\n      </Label>\r\n      <Label>color name\r\n      <input type=\"text\" value={fieldTwo} name={\"second\"} onChange={e => setFieldTwo(e.target.value)} />\r\n      </Label>\r\n      <div>\r\n        <button type=\"submit\" onKeyPress={clickOne} onClick={clickOne}>Submit</button>\r\n      </div>\r\n    </MyForm>\r\n  </>\r\n  )\r\n}\r\n\r\nconst All = styled.div`\r\nwidth: min(100%, 1200px);\r\nmargin: 0 auto;\r\n`;\r\n\r\n\r\nconst Label = styled.label`\r\ndisplay: flex;\r\nalign-items: baseline;\r\nmargin-bottom: 40px;\r\n& input {\r\n  margin-left: 10px;  \r\n}\r\n& textarea {\r\n  height: 80px;\r\n  width: 500px;\r\n\r\n}\r\n`;\r\n\r\nconst MyForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n","import React from \"react\"\r\nimport styled from 'styled-components'\r\n\r\n\r\nexport default function SortDiv({\r\n  wrapstyle,\r\n  style1,\r\n  style2,\r\n  style3,\r\n  style4\r\n}) {\r\n\r\n  return (<>wrapper\r\n    <Wrapper wrapstyle={wrapstyle}>\r\n      <Div1 style1={style1}>Div 1</Div1>\r\n      <Div2 style2={style2}>Div 2</Div2>\r\n      <Div3 style3={style3}>Div 3</Div3>\r\n      <Div4 style4={style4}>Div 4</Div4>\r\n    </Wrapper>\r\n  </>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  ${({ wrapstyle }) => wrapstyle}\r\n`;\r\n\r\nconst Div1 = styled.div`\r\n  ${({ style1 }) => style1}\r\n`;\r\n\r\nconst Div2 = styled.div`\r\n  ${({ style2 }) => style2}\r\n\r\n`;\r\n\r\nconst Div3 = styled.div`\r\n  ${({ style3 }) => style3}\r\n\r\n`;\r\n\r\nconst Div4 = styled.div`\r\n  ${({ style4 }) => style4}\r\n`;\r\n","import React, { useState } from \"react\"\r\nimport styled from 'styled-components';\r\nimport SortDiv from \"./sortDiv\";\r\n\r\nexport default function SortDivHome() {\r\n\r\n  const [fieldOne, setFieldOne] = useState();\r\n  const [fieldTwo, setFieldTwo] = useState();\r\n  const [fieldThree, setFieldThree] = useState();\r\n  const [fieldFour, setFieldFour] = useState();\r\n\r\n  function clickOne(e) {\r\n    e.preventDefault();\r\n    setFieldThree(hexToRGB(\"#\" + fieldOne));\r\n    setFieldFour(nameToHex(fieldTwo));\r\n  }\r\n\r\n\r\n  function hexToRGB(h) {\r\n    let r = 0, g = 0, b = 0;\r\n\r\n    // 3 digits\r\n    if (h.length == 4) {\r\n      r = \"0x\" + h[1] + h[1];\r\n      g = \"0x\" + h[2] + h[2];\r\n      b = \"0x\" + h[3] + h[3];\r\n\r\n      // 6 digits\r\n    } else if (h.length == 7) {\r\n      r = \"0x\" + h[1] + h[2];\r\n      g = \"0x\" + h[3] + h[4];\r\n      b = \"0x\" + h[5] + h[6];\r\n    }\r\n\r\n    return \"rgb(\" + +r + \",\" + +g + \",\" + +b + \")\";\r\n  }\r\n\r\n  function nameToHex(name) {\r\n    // Get RGB from named color in temporary div\r\n    let fakeDiv = document.createElement(\"div\");\r\n    fakeDiv.style.color = name;\r\n    document.body.appendChild(fakeDiv);\r\n\r\n    let cs = window.getComputedStyle(fakeDiv),\r\n      pv = cs.getPropertyValue(\"color\");\r\n\r\n    document.body.removeChild(fakeDiv);\r\n\r\n    // Code ripped from RGBToHex() (except pv is substringed)\r\n    let rgb = pv.substr(4).split(\")\")[0].split(\",\"),\r\n      r = (+rgb[0]).toString(16),\r\n      g = (+rgb[1]).toString(16),\r\n      b = (+rgb[2]).toString(16);\r\n\r\n    if (r.length == 1)\r\n      r = \"0\" + r;\r\n    if (g.length == 1)\r\n      g = \"0\" + g;\r\n    if (b.length == 1)\r\n      b = \"0\" + b;\r\n\r\n    return \"#\" + r + g + b;\r\n  }\r\n\r\n\r\n  const [wrapper, setWrapper] = useState(\"display: grid; grid-template-columns: 1fr 1fr 1fr;\");\r\n  const [div1, setDiv1] = useState();\r\n  const [div2, setDiv2] = useState();\r\n  const [div3, setDiv3] = useState();\r\n  const [div4, setDiv4] = useState();\r\n\r\n  function clearAll() {\r\n    setWrapper('');\r\n    setDiv1('');\r\n    setDiv2('');\r\n    setDiv3('');\r\n    setDiv4('');\r\n  }\r\n\r\n  return (<All>\r\n    <MyForm2>\r\n      <Head>Make B look like A\r\n         <div>\r\n          <button onClick={clearAll}>Start Over</button>\r\n        </div>\r\n      </Head>\r\n\r\n      <Rap>\r\n        <Header>A</Header>\r\n        wrapper\r\n          <T1>\r\n          <T2>Div 1</T2>\r\n          <T3>Div 2</T3>\r\n          <T4>Div 3</T4>\r\n          <T5>Div 4</T5>\r\n        </T1>\r\n      </Rap>\r\n    </MyForm2>\r\n    <Rap2>\r\n      <Header2>B</Header2>\r\n      <SortDiv\r\n        wrapstyle={wrapper}\r\n        style1={div1}\r\n        style2={div2}\r\n        style3={div3}\r\n        style4={div4}\r\n      />\r\n    </Rap2>\r\n\r\n    <MyFormGrid>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", fontWeight: \"400\", color: \"gray\", gridRow: \"1 / span 6\", gridColumn: \"1 / span 1\", marginRight: \"30px\" }}>\r\n        <div style={{ border: \"1px solid gray\", padding: \"20px\", }}>\r\n          <div>&#60;div&#62;</div>\r\n          <div style={{ paddingLeft: \"10px\" }}>wrapper</div>\r\n          <div style={{ paddingLeft: \"20px\" }}>&#60;div <b style={{ color: \"red\" }}>class=S-Wrapper</b> &#62;</div>\r\n          <div style={{ paddingLeft: \"30px\" }}>&#60;div <b style={{ color: \"red\" }}>class=S-Div1</b> &#62;Div 1&#60;/div&#62;</div>\r\n          <div style={{ paddingLeft: \"30px\" }}>&#60;div <b style={{ color: \"red\" }}>class=S-Div2</b> &#62;Div 2&#60;/div&#62;</div>\r\n          <div style={{ paddingLeft: \"30px\" }}>&#60;div <b style={{ color: \"red\" }}>class=S-Div3</b> &#62;Div 3&#60;/div&#62;</div>\r\n          <div style={{ paddingLeft: \"30px\" }}>&#60;div <b style={{ color: \"red\" }}>class=S-Div4</b> &#62;Div 4&#60;/div&#62;</div>\r\n          <div style={{ paddingLeft: \"20px\" }}>&#60;/div&#62;</div>\r\n          <div style={{ paddingLeft: \"10px\" }}>&#60;/div&#62;</div>\r\n        </div>\r\n      </div>\r\n      <div style={{ justifySelf: \"flex-end\", color: \"red\" }}>S-Wrapper</div>\r\n      <Textarea spellCheck={false} type=\"text\" value={wrapper} onChange={e => setWrapper(e.target.value)} />\r\n      <div style={{ justifySelf: \"flex-end\", color: \"red\" }}>S-Div1</div>\r\n      <Textarea spellCheck={false} type=\"text\" value={div1} onChange={e => setDiv1(e.target.value)} />\r\n      <div style={{ justifySelf: \"flex-end\", color: \"red\" }}>Div 2</div>\r\n      <Textarea spellCheck={false} type=\"text\" value={div2} onChange={e => setDiv2(e.target.value)} />\r\n      <div style={{ justifySelf: \"flex-end\", color: \"red\" }}>Div 3</div>\r\n      <Textarea spellCheck={false} type=\"text\" value={div3} onChange={e => setDiv3(e.target.value)} />\r\n      <div style={{ justifySelf: \"flex-end\", color: \"red\" }}>Div 4</div>\r\n      <Textarea spellCheck={false} type=\"text\" value={div4} onChange={e => setDiv4(e.target.value)} />\r\n    </MyFormGrid>\r\n  </All>\r\n  )\r\n}\r\n\r\nconst All = styled.div`\r\nwidth: min(100%, 1200px);\r\nmargin: 0 auto;\r\n`;\r\n\r\nconst RapStyle = styled.div`\r\n  position: relative;\r\n  height: auto;\r\n  padding: 30px;\r\nbox-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0,0,0,.12);\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    border-color: #e0e0e0;\r\n    background-color: white;\r\nborder-radius: 10px;\r\n`;\r\n\r\nconst Rap = styled(RapStyle)`\r\n\r\n`;\r\n\r\nconst Rap2 = styled(RapStyle)`\r\n\r\n`;\r\n\r\nconst Header = styled.div`\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 5px;\r\n  font-family: work sans, san-serif;\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  color: purple;\r\n`;\r\n\r\nconst Header2 = styled.div`\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 5px;\r\n  font-family: work sans, san-serif;\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  color: #a91009;\r\n`;\r\nconst Textarea = styled.textarea`\r\n  height: 50px;\r\n  width: 500px;\r\n`;\r\nconst MyFormGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto 100px 1fr;\r\n  grid-gap: 10px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Head = styled.div`\r\n  // font-family: Work Sans, san-serif;\r\n  // font-weight: 600;\r\n  // color: blue;\r\n  // margin-bottom: 20px;\r\n      margin-left: 0;\r\n    margin-right: 0;\r\n    margin-top: 0;\r\n    padding-bottom: 0;\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n    padding-top: 0;\r\n    margin-bottom: 1.5rem;\r\n    color: black;\r\n    font-family: 'Futura PT',-apple-system,'BlinkMacSystemFont','Segoe UI','Roboto','Helvetica Neue','Arial','Noto Sans',sans-serif,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol','Noto Color Emoji';\r\n    font-weight: bold;\r\n    text-rendering: optimizeLegibility;\r\n    font-size: 2rem;\r\n    line-height: 1.25;\r\n`;\r\nconst T1 = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  grid-gap: 10px;\r\n  background-color: gray;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst T2 = styled.div`\r\ngrid-column: 3 / span 1;\r\ngrid-row: 1 / span 2;\r\nborder: 1px solid white;\r\npadding: 10px;\r\nborder-radius:50%;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n`;\r\nconst T3 = styled.div`\r\ngrid-column: 1 / span 1;\r\nborder: 1px solid white;\r\npadding: 10px;\r\n`;\r\nconst T4 = styled.div`\r\ngrid-column: 2 / span 1;\r\nborder: 1px solid white;\r\npadding: 10px;\r\n`;\r\nconst T5 = styled.div`\r\ngrid-column: 1 / span 2;\r\nborder: 1px solid white;\r\npadding: 10px;\r\n`;\r\n\r\nconst Label = styled.label`\r\ndisplay: flex;\r\nalign-items: baseline;\r\nmargin-bottom: 40px;\r\n& input {\r\n  margin-left: 10px;  \r\n}\r\n& textarea {\r\n  height: 80px;\r\n  width: 500px;\r\n\r\n}\r\n`;\r\n\r\nconst MyForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst MyForm2 = styled.div`\r\nmargin: 20px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React, { useState } from \"react\"\r\nimport styled from 'styled-components';\r\nimport FindColor from './findColor';\r\nimport SortDivHome from './sortDivHome';\r\n\r\nexport default function Home() {\r\n\r\n  const [initialSet, setInitialSet] = useState(true);\r\n  const [color, setColor] = useState(false);\r\n  const [layout, setLayout] = useState(false);\r\n  const [hideme, setHideme] = useState(false);\r\n\r\n  function colorClick(e) {\r\n    e.preventDefault();\r\n    setColor(true);\r\n    setLayout(false);\r\n    setInitialSet(false);\r\n    setHideme(true);\r\n  }\r\n\r\n  function layoutClick(e) {\r\n    e.preventDefault(e);\r\n    setColor(false);\r\n    setLayout(true);\r\n    setInitialSet(false);\r\n    setHideme(true);\r\n  }\r\n\r\n  function start(e) {\r\n    e.preventDefault();\r\n    setColor(false);\r\n    setLayout(false);\r\n    setInitialSet(true);\r\n    setHideme(false);\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      {!hideme &&\r\n        <Header>Choose A Skill</Header>\r\n      }\r\n      {initialSet &&\r\n        <>\r\n          <Choices>\r\n            <One onClick={colorClick}>Color Codes</One>\r\n            <Two onClick={layoutClick}>Layouts</Two>\r\n          </Choices>\r\n        </>\r\n      }\r\n      {color && <>\r\n        <div><button onClick={start}>Go Back</button></div>\r\n        <FindColor />\r\n      </>\r\n      }\r\n      {layout && <>\r\n        <div><button onClick={start}>Go Back</button></div>\r\n        <SortDivHome />\r\n      </>\r\n      }\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: min(1200px, 100%);\r\n  margin: 30px auto;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  font-size: 30px;\r\n  line-height: 36px;\r\n`;\r\n\r\n\r\nconst Choices = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  margin-top: 20px;\r\n  grid-gap: 20px;\r\n  background-color: white;\r\n`;\r\n\r\nconst Boxes = styled.div`\r\n  border: 1px solid rgba(128,128,128,0.3);\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n\r\n`;\r\n\r\nconst One = styled(Boxes)`\r\n  &:hover {\r\n    background-color: blue;\r\n    color: white;\r\n  }\r\n`;\r\nconst Two = styled(Boxes)`\r\n  &:hover {\r\n    background-color: orange;\r\n    color: white;\r\n  }\r\n`;\r\n// import React from 'react';\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//         <p>\r\n//           Edit <code>src/App.js</code> and save to reload.\r\n//         </p>\r\n//         <a\r\n//           className=\"App-link\"\r\n//           href=\"https://reactjs.org\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//         >\r\n//           Learn React\r\n//         </a>\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}