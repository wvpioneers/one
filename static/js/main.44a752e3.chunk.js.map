{"version":3,"sources":["findColor.js","sortDiv.js","sortDivHome.js","App.js","serviceWorker.js","index.js"],"names":["FindColor","useState","fieldOne","setFieldOne","fieldTwo","setFieldTwo","fieldThree","setFieldThree","fieldFour","setFieldFour","faArrowsAltH","icon","setIcon","fill","setFill","fill2","setFill2","clickOne","name","fakeDiv","document","createElement","style","color","body","appendChild","pv","window","getComputedStyle","getPropertyValue","removeChild","rgb","substr","split","r","toString","g","b","length","nameToHex","clickTwo","hex","h","hexToRGB","Grid","Header","One","onClick","faArrowLeft","Two","faArrowRight","MyForm","Wrap","Section","Label","htmlFor","type","id","value","onChange","e","target","onKeyDown","key","BWrap","Sub","styled","div","Box","label","SortDiv","wrapstyle","style1","style2","style3","style4","Wrapper","Div1","Div2","Div3","Div4","SortDivHome","wrapper","setWrapper","div1","setDiv1","div2","setDiv2","div3","setDiv3","div4","setDiv4","All","MyForm2","Top","Head","Div","Rap","T1","T2","T3","T4","T5","Rap2","Header2","MyFormGrid","display","flexDirection","fontWeight","gridRow","gridColumn","marginRight","border","padding","paddingLeft","justifySelf","Textarea","spellCheck","RapStyle","textarea","Home","initialSet","setInitialSet","setColor","layout","setLayout","hideme","setHideme","start","preventDefault","Choices","Boxes","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.44a752e3.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faArrowRight, faArrowsAltH } from '@fortawesome/free-solid-svg-icons'\r\nexport default function FindColor({\r\n\r\n}) {\r\n\r\n  function hexToRGB(h) {\r\n    let r = 0, g = 0, b = 0;\r\n\r\n    // 3 digits\r\n    if (h.length == 4) {\r\n      r = \"0x\" + h[1] + h[1];\r\n      g = \"0x\" + h[2] + h[2];\r\n      b = \"0x\" + h[3] + h[3];\r\n\r\n      // 6 digits\r\n    } else if (h.length == 7) {\r\n      r = \"0x\" + h[1] + h[2];\r\n      g = \"0x\" + h[3] + h[4];\r\n      b = \"0x\" + h[5] + h[6];\r\n    }\r\n\r\n    return \"rgb(\" + +r + \",\" + +g + \",\" + +b + \")\";\r\n  }\r\n\r\n  function nameToHex(name) {\r\n    // Get RGB from named color in temporary div\r\n    let fakeDiv = document.createElement(\"div\");\r\n    fakeDiv.style.color = name;\r\n    document.body.appendChild(fakeDiv);\r\n\r\n    let cs = window.getComputedStyle(fakeDiv),\r\n      pv = cs.getPropertyValue(\"color\");\r\n\r\n    document.body.removeChild(fakeDiv);\r\n\r\n    // Code ripped from RGBToHex() (except pv is substringed)\r\n    let rgb = pv.substr(4).split(\")\")[0].split(\",\"),\r\n      r = (+rgb[0]).toString(16),\r\n      g = (+rgb[1]).toString(16),\r\n      b = (+rgb[2]).toString(16);\r\n\r\n    if (r.length == 1)\r\n      r = \"0\" + r;\r\n    if (g.length == 1)\r\n      g = \"0\" + g;\r\n    if (b.length == 1)\r\n      b = \"0\" + b;\r\n\r\n    return \"#\" + r + g + b;\r\n  }\r\n\r\n  const [fieldOne, setFieldOne] = useState();\r\n  const [fieldTwo, setFieldTwo] = useState();\r\n  const [fieldThree, setFieldThree] = useState();\r\n  const [fieldFour, setFieldFour] = useState();\r\n  const [icon, setIcon] = useState(faArrowsAltH);\r\n  const [fill, setFill] = useState(false);\r\n  const [fill2, setFill2] = useState(false);\r\n\r\n  function clickOne(name) {\r\n    setFieldFour(nameToHex(name));\r\n  }\r\n\r\n  function clickTwo(hex) {\r\n    setFieldThree(hexToRGB(\"#\" + hex));\r\n  }\r\n\r\n\r\n  return (<>\r\n\r\n    <Grid><Header>Get Code By</Header>\r\n      <One onClick={() => { setIcon(faArrowLeft); setFill(true); setFill2(false) }} fill={fill}>Name</One>\r\n      <FontAwesomeIcon icon={icon} />\r\n      <Two onClick={() => { setIcon(faArrowRight); setFill2(true); setFill(false) }} fill={fill2}>Hex</Two>\r\n    </Grid>\r\n    <MyForm>\r\n      <Wrap>\r\n        {fill && <>\r\n          <Section>\r\n            <Label htmlFor=\"1\">Color Name</Label>\r\n            <input type=\"text\" id='1' value={fieldOne} name={\"1\"} onChange={e => setFieldOne(e.target.value)} onKeyDown={e => { if (e.key === \"Enter\") { clickOne(e.target.value) } }} />\r\n          </Section>\r\n          <BWrap><button type=\"submit\" onClick={() => { clickOne(fieldOne) }}>Submit</button></BWrap>\r\n        </>\r\n        }\r\n        {fill2 && <>\r\n          <Section>\r\n            <Label htmlFor=\"2\">Hex Code</Label>\r\n            <div>#\r\n          <input type=\"text\" id='2' value={fieldTwo} name={\"2\"} onChange={e => setFieldTwo(e.target.value)} onKeyDown={e => { if (e.key === \"Enter\") { clickTwo(e.target.value) } }} />\r\n            </div>\r\n          </Section>\r\n          <BWrap><button type=\"submit\" onClick={() => { clickTwo(fieldTwo) }}>Submit</button></BWrap>\r\n        </>\r\n        }\r\n      </Wrap>\r\n      {fill && <Sub>example: white</Sub>}\r\n      {fill2 && <Sub>example: #ffffff</Sub>}\r\n    </MyForm>\r\n    <div>{fill2 && fieldThree} {fill && fieldFour}</div>\r\n  </>\r\n  )\r\n}\r\n\r\nconst BWrap = styled.div`\r\n  margin-left: 30px;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: baseline;\r\n  & svg {\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nconst Box = styled.div`\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  border: 1px solid blue;\r\n  border-radius: 10px;\r\n  transition: all 0.3s ease;\r\n  min-width: 60px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst One = styled(Box)`\r\n  background-color: ${({ fill }) => fill ? \"blue\" : \"white\"};\r\n  color: ${({ fill }) => fill ? \"white\" : \"blue\"};\r\n`;\r\nconst Two = styled(Box)`\r\nbackground-color: ${({ fill }) => fill ? \"blue\" : \"white\"};\r\ncolor: ${({ fill }) => fill ? \"white\" : \"blue\"};\r\n`;\r\n\r\nconst Header = styled.div`\r\n  margin-top: 20px;\r\n  font-size: 20px;\r\n  padding-right: 30px;\r\n`;\r\nconst Section = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  & label {\r\n    padding-right: 10px;\r\n  }\r\n  & div {\r\n    & input {\r\n      margin-left: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Sub = styled.div`\r\n font-size: 14px;\r\n color: gray;\r\n`;\r\n\r\n\r\nconst Label = styled.label`\r\n\r\n`;\r\n\r\nconst MyForm = styled.div`\r\nmargin: 20px 0;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\n","import React from \"react\"\r\nimport styled from 'styled-components'\r\n\r\n\r\nexport default function SortDiv({\r\n  wrapstyle,\r\n  style1,\r\n  style2,\r\n  style3,\r\n  style4\r\n}) {\r\n\r\n  return (<>wrapper\r\n    <Wrapper wrapstyle={wrapstyle}>\r\n      <Div1 style1={style1}>Div 1</Div1>\r\n      <Div2 style2={style2}>Div 2</Div2>\r\n      <Div3 style3={style3}>Div 3</Div3>\r\n      <Div4 style4={style4}>Div 4</Div4>\r\n    </Wrapper>\r\n  </>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  ${({ wrapstyle }) => wrapstyle}\r\n`;\r\n\r\nconst Div1 = styled.div`\r\n  ${({ style1 }) => style1}\r\n`;\r\n\r\nconst Div2 = styled.div`\r\n  ${({ style2 }) => style2}\r\n\r\n`;\r\n\r\nconst Div3 = styled.div`\r\n  ${({ style3 }) => style3}\r\n\r\n`;\r\n\r\nconst Div4 = styled.div`\r\n  ${({ style4 }) => style4}\r\n`;\r\n","import React, { useState } from \"react\"\r\nimport styled from 'styled-components';\r\nimport SortDiv from \"./sortDiv\";\r\n\r\nexport default function SortDivHome() {\r\n\r\n  const [fieldOne, setFieldOne] = useState();\r\n  const [fieldTwo, setFieldTwo] = useState();\r\n  const [fieldThree, setFieldThree] = useState();\r\n  const [fieldFour, setFieldFour] = useState();\r\n\r\n  function clickOne(e) {\r\n    e.preventDefault();\r\n    setFieldThree(hexToRGB(\"#\" + fieldOne));\r\n    setFieldFour(nameToHex(fieldTwo));\r\n  }\r\n\r\n\r\n  function hexToRGB(h) {\r\n    let r = 0, g = 0, b = 0;\r\n\r\n    // 3 digits\r\n    if (h.length === 4) {\r\n      r = \"0x\" + h[1] + h[1];\r\n      g = \"0x\" + h[2] + h[2];\r\n      b = \"0x\" + h[3] + h[3];\r\n\r\n      // 6 digits\r\n    } else if (h.length === 7) {\r\n      r = \"0x\" + h[1] + h[2];\r\n      g = \"0x\" + h[3] + h[4];\r\n      b = \"0x\" + h[5] + h[6];\r\n    }\r\n\r\n    return \"rgb(\" + +r + \",\" + +g + \",\" + +b + \")\";\r\n  }\r\n\r\n  function nameToHex(name) {\r\n    // Get RGB from named color in temporary div\r\n    let fakeDiv = document.createElement(\"div\");\r\n    fakeDiv.style.color = name;\r\n    document.body.appendChild(fakeDiv);\r\n\r\n    let cs = window.getComputedStyle(fakeDiv),\r\n      pv = cs.getPropertyValue(\"color\");\r\n\r\n    document.body.removeChild(fakeDiv);\r\n\r\n    // Code ripped from RGBToHex() (except pv is substringed)\r\n    let rgb = pv.substr(4).split(\")\")[0].split(\",\"),\r\n      r = (+rgb[0]).toString(16),\r\n      g = (+rgb[1]).toString(16),\r\n      b = (+rgb[2]).toString(16);\r\n\r\n    if (r.length === 1)\r\n      r = \"0\" + r;\r\n    if (g.length === 1)\r\n      g = \"0\" + g;\r\n    if (b.length === 1)\r\n      b = \"0\" + b;\r\n\r\n    return \"#\" + r + g + b;\r\n  }\r\n\r\n\r\n  const [wrapper, setWrapper] = useState(\"display: grid; grid-template-columns: 1fr 1fr 1fr;\");\r\n  const [div1, setDiv1] = useState();\r\n  const [div2, setDiv2] = useState();\r\n  const [div3, setDiv3] = useState();\r\n  const [div4, setDiv4] = useState();\r\n\r\n  function clearAll() {\r\n    setWrapper('');\r\n    setDiv1('');\r\n    setDiv2('');\r\n    setDiv3('');\r\n    setDiv4('');\r\n  }\r\n\r\n  return (<All>\r\n    <MyForm2>\r\n      <Top><Head>Make B look like A</Head>\r\n        <Div>\r\n          <button onClick={clearAll}>Start Over</button>\r\n        </Div>\r\n      </Top>\r\n\r\n      <Rap>\r\n        <Header>A</Header>\r\n        wrapper\r\n          <T1>\r\n          <T2>Div 1</T2>\r\n          <T3>Div 2</T3>\r\n          <T4>Div 3</T4>\r\n          <T5>Div 4</T5>\r\n        </T1>\r\n      </Rap>\r\n    </MyForm2>\r\n    <Rap2>\r\n      <Header2>B</Header2>\r\n      <SortDiv\r\n        wrapstyle={wrapper}\r\n        style1={div1}\r\n        style2={div2}\r\n        style3={div3}\r\n        style4={div4}\r\n      />\r\n    </Rap2>\r\n\r\n    <MyFormGrid>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", fontWeight: \"400\", color: \"gray\", gridRow: \"1 / span 6\", gridColumn: \"1 / span 1\", marginRight: \"30px\" }}>\r\n        <div style={{ border: \"1px solid gray\", padding: \"20px\", }}>\r\n          <div>&#60;div&#62;</div>\r\n          <div style={{ paddingLeft: \"10px\" }}>wrapper</div>\r\n          <div style={{ paddingLeft: \"20px\" }}>&#60;div <b style={{ color: \"red\" }}>class=S-Wrapper</b> &#62;</div>\r\n          <div style={{ paddingLeft: \"30px\" }}>&#60;div <b style={{ color: \"red\" }}>class=S-Div1</b> &#62;Div 1&#60;/div&#62;</div>\r\n          <div style={{ paddingLeft: \"30px\" }}>&#60;div <b style={{ color: \"red\" }}>class=S-Div2</b> &#62;Div 2&#60;/div&#62;</div>\r\n          <div style={{ paddingLeft: \"30px\" }}>&#60;div <b style={{ color: \"red\" }}>class=S-Div3</b> &#62;Div 3&#60;/div&#62;</div>\r\n          <div style={{ paddingLeft: \"30px\" }}>&#60;div <b style={{ color: \"red\" }}>class=S-Div4</b> &#62;Div 4&#60;/div&#62;</div>\r\n          <div style={{ paddingLeft: \"20px\" }}>&#60;/div&#62;</div>\r\n          <div style={{ paddingLeft: \"10px\" }}>&#60;/div&#62;</div>\r\n        </div>\r\n      </div>\r\n      <div style={{ justifySelf: \"flex-end\", color: \"red\" }}>S-Wrapper</div>\r\n      <Textarea spellCheck={false} type=\"text\" value={wrapper} onChange={e => setWrapper(e.target.value)} />\r\n      <div style={{ justifySelf: \"flex-end\", color: \"red\" }}>S-Div1</div>\r\n      <Textarea spellCheck={false} type=\"text\" value={div1} onChange={e => setDiv1(e.target.value)} />\r\n      <div style={{ justifySelf: \"flex-end\", color: \"red\" }}>Div 2</div>\r\n      <Textarea spellCheck={false} type=\"text\" value={div2} onChange={e => setDiv2(e.target.value)} />\r\n      <div style={{ justifySelf: \"flex-end\", color: \"red\" }}>Div 3</div>\r\n      <Textarea spellCheck={false} type=\"text\" value={div3} onChange={e => setDiv3(e.target.value)} />\r\n      <div style={{ justifySelf: \"flex-end\", color: \"red\" }}>Div 4</div>\r\n      <Textarea spellCheck={false} type=\"text\" value={div4} onChange={e => setDiv4(e.target.value)} />\r\n    </MyFormGrid>\r\n  </All>\r\n  )\r\n}\r\n\r\nconst Div = styled.div`\r\n  padding-left: 30px;\r\n`;\r\nconst Top = styled.div`\r\nmargin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\nconst All = styled.div`\r\nwidth: min(100%, 1200px);\r\nmargin: 0 auto;\r\n`;\r\n\r\nconst RapStyle = styled.div`\r\n  position: relative;\r\n  height: auto;\r\n  padding: 30px;\r\nbox-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0,0,0,.12);\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    border-color: #e0e0e0;\r\n    background-color: white;\r\nborder-radius: 10px;\r\n`;\r\n\r\nconst Rap = styled(RapStyle)`\r\n\r\n`;\r\n\r\nconst Rap2 = styled(RapStyle)`\r\n\r\n`;\r\n\r\nconst Header = styled.div`\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 5px;\r\n  font-family: work sans, san-serif;\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  color: purple;\r\n`;\r\n\r\nconst Header2 = styled.div`\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 5px;\r\n  font-family: work sans, san-serif;\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  color: #a91009;\r\n`;\r\nconst Textarea = styled.textarea`\r\n  height: 50px;\r\n  width: 500px;\r\n`;\r\nconst MyFormGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto 100px 1fr;\r\n  grid-gap: 10px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Head = styled.div`\r\n\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    margin-top: 0;\r\n    padding-bottom: 0;\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n    padding-top: 0;\r\n    color: black;\r\n    font-family: 'Futura PT',-apple-system,'BlinkMacSystemFont','Segoe UI','Roboto','Helvetica Neue','Arial','Noto Sans',sans-serif,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol','Noto Color Emoji';\r\n    font-weight: bold;\r\n    text-rendering: optimizeLegibility;\r\n    font-size: 2rem;\r\n    line-height: 1.25;\r\n`;\r\nconst T1 = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  grid-gap: 10px;\r\n  background-color: gray;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst T2 = styled.div`\r\ngrid-column: 3 / span 1;\r\ngrid-row: 1 / span 2;\r\nborder: 1px solid white;\r\npadding: 10px;\r\nborder-radius:50%;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n`;\r\nconst T3 = styled.div`\r\ngrid-column: 1 / span 1;\r\nborder: 1px solid white;\r\npadding: 10px;\r\n`;\r\nconst T4 = styled.div`\r\ngrid-column: 2 / span 1;\r\nborder: 1px solid white;\r\npadding: 10px;\r\n`;\r\nconst T5 = styled.div`\r\ngrid-column: 1 / span 2;\r\nborder: 1px solid white;\r\npadding: 10px;\r\n`;\r\n\r\nconst Label = styled.label`\r\ndisplay: flex;\r\nalign-items: baseline;\r\nmargin-bottom: 40px;\r\n& input {\r\n  margin-left: 10px;  \r\n}\r\n& textarea {\r\n  height: 80px;\r\n  width: 500px;\r\n\r\n}\r\n`;\r\n\r\nconst MyForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst MyForm2 = styled.div`\r\nmargin: 20px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React, { useState } from \"react\"\r\nimport styled from 'styled-components';\r\nimport FindColor from './findColor';\r\nimport SortDivHome from './sortDivHome';\r\n\r\nexport default function Home() {\r\n\r\n  const [initialSet, setInitialSet] = useState(true);\r\n  const [color, setColor] = useState(false);\r\n  const [layout, setLayout] = useState(false);\r\n  const [hideme, setHideme] = useState(false);\r\n\r\n  const colorClick = e => {\r\n    e.preventDefault();\r\n    setColor(true);\r\n    setLayout(false);\r\n    setInitialSet(false);\r\n    setHideme(true);\r\n  }\r\n\r\n  const layoutClick = e => {\r\n    e.preventDefault(e);\r\n    setColor(false);\r\n    setLayout(true);\r\n    setInitialSet(false);\r\n    setHideme(true);\r\n  }\r\n\r\n  const start = e => {\r\n    e.preventDefault();\r\n    setColor(false);\r\n    setLayout(false);\r\n    setInitialSet(true);\r\n    setHideme(false);\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      {!hideme &&\r\n        <Header>Choose A Skill</Header>\r\n      }\r\n      {initialSet &&\r\n        <>\r\n          <Choices>\r\n            <One onClick={colorClick}>Color Codes</One>\r\n            <Two onClick={layoutClick}>Layouts</Two>\r\n          </Choices>\r\n        </>\r\n      }\r\n      {color && <>\r\n        <div><button onClick={start}>Go Back</button></div>\r\n        <FindColor />\r\n      </>\r\n      }\r\n      {layout && <>\r\n        <div><button onClick={start}>Go Back</button></div>\r\n        <SortDivHome />\r\n      </>\r\n      }\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: min(1200px, 100%);\r\n  margin: 30px auto;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  font-size: 30px;\r\n  line-height: 36px;\r\n`;\r\n\r\n\r\nconst Choices = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  margin-top: 20px;\r\n  grid-gap: 20px;\r\n  background-color: white;\r\n`;\r\n\r\nconst Boxes = styled.div`\r\n  border: 1px solid rgba(128,128,128,0.3);\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n\r\n`;\r\n\r\nconst One = styled(Boxes)`\r\n  &:hover {\r\n    background-color: blue;\r\n    color: white;\r\n  }\r\n`;\r\nconst Two = styled(Boxes)`\r\n  &:hover {\r\n    background-color: orange;\r\n    color: white;\r\n  }\r\n`;\r\n// import React from 'react';\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//         <p>\r\n//           Edit <code>src/App.js</code> and save to reload.\r\n//         </p>\r\n//         <a\r\n//           className=\"App-link\"\r\n//           href=\"https://reactjs.org\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//         >\r\n//           Learn React\r\n//         </a>\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}